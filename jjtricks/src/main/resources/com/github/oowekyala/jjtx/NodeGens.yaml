vanilla:
  "v: $node == $grammar.rootNode":
    - formatter: java
      template: |
        #if( !$thisClass.package.empty )
        package $thisClass.package;
        #end
        public interface $thisClass.simpleName {
            // TODO
        }
    - genClassName: "${grammar.nodePackage}.Abstract${node.name}"
      formatter: java
      template: |
        /*
         * Generated by JJTricks at $timestamp
         * Not intended for manual editing.
         */

        #if( !$thisClass.package.empty )
        package $thisClass.package;
        #end


        public abstract class ${thisClass.simpleName} implements ${node.name} {

            private int id;
            private ${grammar.parser.class.simpleName} parser;

            // TODO handle children

            public ${thisClass.simpleName}(int id) {
                this(null, id);
            }

            public ${thisClass.simpleName}(${grammar.parser.class.simpleName} parser, int id) {
                this.id = id;
                this.parser = parser;
            }

            @Override
            public String toString() {
              return ${grammar.parser.class.simpleName}TreeConstants.jjtNodeName[id];
            }

            #foreach($visitor in $run.commonGen.values())
                #evaluate($visitor.context.acceptMethod)
            #end

        }
  "r:.*":
    - formatter: java
      template: |
        /*
         * Generated by JJTricks at $timestamp
         * Not intended for manual editing.
         */

        #if( !$thisClass.package.empty )
        package $thisClass.package;
        #end


        public class ${thisClass.simpleName} extends Abstract${node.superNode.class.simpleName} {


            public ${thisClass.simpleName}(int id) {
                super(id);
            }

            public ${thisClass.simpleName}(${grammar.parser.class.simpleName} parser, int id) {
                super(parser, id);
            }

            #foreach($visitor in $run.commonGen.values())
            #evaluate($visitor.context.acceptMethod)
            #end

        }

baseAbstractClass:
  "v: $node == $grammar.rootNode":
  "r:.*":
    - templateFile: "/jjtx/templates/VanillaJjtreeNode.java.vm"
      formatter: java
