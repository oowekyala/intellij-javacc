{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://com.github.oowekyala/jjtricks/jjtopts",
  "title": "JJTricks configuration file",
  "type": "object",
  "definitions": {
    "formatter": {
      "type": "string",
      "enum": ["java", "none"]
    },
    "fileGenTask": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "templateFile": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "formatter": {
          "$ref": "#/definitions/formatter"
        },
        "genClassName": {
          "type": "string"
        },
        "context": {
          "type": "object"
        }
      }
    },
    "vanillaJjtreeOpts": {
      "type": "object",
      "description": "Configuration of the compatibility JJTree builder. Output of this profile closely resembles JJTree output, but can be tweaked with the bindings of this object. Default values match most closely JJTree's behaviour.",
      "additionalProperties": false,
      "properties": {
        "fixJjtThisConditionScope": {
          "type": "boolean",
          "description": "If set to true, jjtThis is available in the closing condition of its own node scope. In vanilla JJTree, #Node(jjtThis.something()) isn't compiled correctly.",
          "default": true
        },
        "implementNodeConstants": {
          "type": "boolean",
          "default": true
        },
        "setTokensBeforeHooks": {
          "type": "boolean",
          "default": false
        },
        "descriptiveVariableNames": {
          "type": "boolean",
          "default": true
        },
        "forceCheckedExceptionsDeclaration": {
          "type": "boolean",
          "default": true
        }
      }
    },
    "nodeGenerationScheme": {
      "anyOf": [
        {
          "$ref": "#/definitions/fileGenTask"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fileGenTask"
          }
        },
        {
          "description": "If no value is present, the matching nodes will apply to the next set of generation tasks",
          "type": "null"
        }
      ]
    },
    "singleNodeMatcher": {
      "anyOf": [
        {
          "type": "string",
          "pattern": "\\w+",
          "description": "Expands to the nodePackage + nodePrefix + name"
        },
        {
          "type": "string",
          "pattern": "%\\w+",
          "description": "Expands to nodePackage + name following the '%'. The difference is that the nodePrefix is not applied."
        },
        {
          "type": "string",
          "pattern": "\\w+(\\.\\w+)+",
          "description": "Qualified name (there is a dot in it), which is not expanded and taken as-is."
        }
      ]
    },
    "regexNodeMatcher": {
      "type": "string",
      "pattern": "r:.*",
      "description": "The part after the 'r:' is interpreted as a regex. This pattern expands to all the nodes whose name match the regex."
    },
    "childNodeMatcher": {
      "oneOf": [
        {
          "$ref": "#/definitions/singleNodeMatcher"
        },
        {
          "$ref": "#/definitions/regexNodeMatcher"
        }
      ]
    },
    "typeHierarchyNode": {
      "anyOf": [
        {
          "type": "string",
          "description": "Interpreted as foo"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "$ref": "#/definitions/singleNodeMatcher"
            },
            "subtypes": {
              "anyOf": [
                {
                  "$ref": "#/definitions/childNodeMatcher"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/typeHierarchyNode"
                  }
                }
              ]
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    }
  },

  "additionalProperties": false,
  "properties": {
    "jjtx": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nodePrefix": {
          "description": "Prefix prepended to the node name. Defaults to the JJTree key NODE_PREFIX, or its default of \"AST\"",
          "type": "string",
          "pattern": "\\w*"
        },
        "nodePackage": {
          "description": "Package of the node classes",
          "type": "string"
        },
        "templateContext": {
          "description": "Additional bindings for a Velocity context that will be shared by all template executions (gen:visitors, gen:nodes)",
          "type": "object",
          "default": {}

        },
        "typeHierarchy": {
          "description": "Description of the subtyping relation between generated node types. This is useful when your hierarchy is not trivial and you want to e.g. generate visitors with a delegation mechanism",
          "$ref": "#/definitions/typeHierarchyNode"
        },
        "javaccGen": {
          "description": "Configuration of JavaCC grammar generation.",
          "$ref": "#/definitions/vanillaJjtreeOpts"
        },
        "activeGenScheme": {
          "type": "string"
        },
        "nodeGenerationSchemes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Map of ids to node generation scheme.",
            "additionalProperties": {
              "$ref": "#/definitions/nodeGenerationScheme"
            }
          }
        },

        "visitors": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/fileGenTask"
          }
        }
      }
    }
  }
}
