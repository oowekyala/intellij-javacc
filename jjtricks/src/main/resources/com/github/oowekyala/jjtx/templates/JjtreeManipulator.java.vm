#evaluate( $!fileHeader )

#*
   This is not generated by default, but can be added to your gen tasks as an
   extensible default implementation for the $manipulator
*#

/**
 * Implementation of {@link $manipulator} that calls back to the default Jjtree-style methods
 * of the nodes.
 */
$!visibility $!modifiers class ${thisClass.simpleName} implements $manipulator {

    /** Instance with the default behaviour. */
    public static final ${thisClass.simpleName} INSTANCE = new ${thisClass.simpleName}();

    $!mods.override
    public void setFirstToken($treeBuilder builder, $topNode node, $token token){
        #if ( $grammar.trackTokens )
        node.jjtSetFirstToken(token);
        #end
    }

    $!mods.override
    public void setLastToken($treeBuilder builder, $topNode node, $token token){
        #if ( $grammar.trackTokens )
        node.jjtSetLastToken(token);
        #end
    }

    $!mods.override
    public void onOpen($treeBuilder builder, $topNode node) {
        node.jjtOpen();
    }

    $!mods.override
    public void onPush($treeBuilder builder, $topNode node) {
        node.jjtClose();
    }

    $!mods.override
    public void addChild($treeBuilder builder, $topNode parent, $topNode child, int index) {
        child.jjtSetParent(child);
        parent.jjtAddChild(child, index);
    }


}
