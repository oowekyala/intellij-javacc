#evaluate( $!fileHeader )
#evaluate( $!packageDecl )

#set ( $topNode = $grammar.rootNode.klass.simpleName )
#set ( $treeBuilder =  $run.javaccGen.support.treeBuilder.class.simpleName )

#if ( $run.javaccGen.support.token.class )
    #set ( $token = $run.javaccGen.support.token.class.simpleName )
    import $run.javaccGen.support.token.class.qualifiedName;
#else
    #set ( $token = "Token")
    import ${grammar.parser.class.addPackage("Token")};
#end

import $grammar.rootNode.klass.qualifiedName;
import $run.javaccGen.support.treeBuilder.class.qualifiedName;

$!visibility $!modifiers class ${thisClass.simpleName} {

    /** Instance with the default behaviour. */
    public static final ${thisClass.simpleName} DEFAULT_INSTANCE = new ${thisClass.simpleName}();

    /** Called before calling {@link ${H}onOpen}()} with the first token of a node.
      * The default implementation calls {@code jjtSetFirstToken}.
      */
    public void setFirstToken($treeBuilder builder, $topNode node, $token token){
        node.jjtSetFirstToken(token);
    }

    /** Called before calling {@link ${H}onPush}()} with the last token of a node.
      * The default implementation calls {@code jjtSetLastToken}.
      */
    public void setLastToken($treeBuilder builder, $topNode node, $token token){
        node.jjtSetLastToken(token);
    }

    /** Called when a node is first open. In this state, the node has no children
      * yet, and no parent. The default implementation calls {@code jjtOpen}.
      */
    public void onOpen($treeBuilder builder, $topNode node) {
        node.jjtOpen();
    }

    /** Called when a node is done being built. In this state, the node already has
      * all its children, but no parent yet. It's not yet on the stack of the tree
      * builder.
      *
      * <p>The default implementation calls {@code jjtClose}.
      */
    public void onPush($treeBuilder builder, $topNode node) {
        node.jjtClose();
    }

    /** Called when a node is done being built. In this state, the node already has
      * all its children, but no parent yet. The default implementation calls {@code jjtClose}.
      */
    public void addChild($treeBuilder builder, $topNode parent, $topNode child, int index) {
        child.jjtSetParent(child);
        parent.jjtAddChild(child, index);
    }


}
