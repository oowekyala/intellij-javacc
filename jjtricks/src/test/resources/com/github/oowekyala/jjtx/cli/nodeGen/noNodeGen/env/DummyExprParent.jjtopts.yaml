jjtx:
  visitors:
    defaultJjtreeVisitor:
      <<: !from '/jjtx/Defaults.jjtopts.yaml#/jjtx/visitors/defaultJjtreeVisitor'
    parameterlessVisitor:
      <<: !from '/jjtx/Defaults.jjtopts.yaml#/jjtx/visitors/parameterlessVisitor'

  nodeGenerationSchemes:
    parentGen:
      # Match predicates in order
      # v:X template X with node generation context
      "v: $node == $grammar.rootNode":
        - templateFile: "/jjtx/templates/RootInterface.java.vm"
          formatter: "java"
        - templateFile: "/jjtx/templates/NodeRoot.java.vm"
          formatter: "java"
      "v: !$node.subnodes.empty":
        - templateFile: "/jjtx/templates/NodeInterface.java.vm"
          genClassName: "$node.class.qualifiedName"
          formatter: "java"
        - templateFile: "/jjtx/templates/NodeAbstractClass.java.vm"
          genClassName: "${grammar.nodePackage}.Abstract${node.name}"
          formatter: "java"
      "r:.*":
        - templateFile: "/jjtx/templates/Node.java.vm"
          formatter: "java"

  nodePrefix: AST
  nodePackage: "org.parent"
  typeHierarchy:
    "%MyNodeParent":
      - "Expression":
          - "r:.*Expression"
          - Literal:
              - NullLiteral
              - IntegerLiteral
