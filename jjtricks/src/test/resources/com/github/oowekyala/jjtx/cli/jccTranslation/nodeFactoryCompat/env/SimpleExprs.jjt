
options {
    MULTI = true;
    NODE_FACTORY = true;
}

PARSER_BEGIN(SimpleExprParser)

    package com.jjtx.exprs;

    /**
     *  This is my parser declaration
     */
    public class SimpleExprParser extends Foo<B> implements A {

    }

PARSER_END(SimpleExprParser)

// Some token declarations
<DEFAULT>
TOKEN :{
  < PLUS: "+" >
| < MINUS: "-" >
| < NULL: "null" >
| < INTEGER: ["+",  "-"] <DIGITS> >
| < #DIGITS: (["0"-"9"])+ >
}


void Expression() #void: {}
{
      BinaryExpression()
    | <NULL>   #NullLiteral
}

void BinaryExpression() #BinaryExpr(jjtThis.foo()): {}
{
    UnaryExpr() [ ( "+" | "-" ) UnaryExpr() ]
}

void UnaryExpr() #void: {}
{
  ("(" Expression() ")") #ParenthesizedExpr | Integer()
}

void Integer() #IntegerLiteral: {}
{
  <INTEGER>
}
