# Fully resolved JJTricks configuration
# Config file chain: DummyExpr.jjtopts.yaml -> /jjtx/Root.jjtopts.yaml -> DummyExpr.jjt
jjtx:
  nodePackage: org.exprs.ast
  nodePrefix: Ex
  templateContext:
    visitorMethodComment: |
      /**
       * Visits {@linkplain $node.classSimpleName $node.name}.
         #if ( $node.superNode )
       * Delegates to {@link $H#methodAnchor($node.superNode)}
       * if unimplemented.
       *
        #if ( !$node.subNodes.empty )
       * This method is delegated to by:
       * <ul>
          #foreach($sub in $node.subNodes)
       *   <li>{@link $H#methodAnchor($sub)}</li>
          #end
       * </ul>
        #end
        #else
       *   This is the root of the delegation chain.
        #end
       *
       */
  typeHierarchy:
    org.exprs.ast.MyNodeParent:
    - org.exprs.ast.ExExpression:
      - org.exprs.ast.ExBinaryExpression
      - org.exprs.ast.ExLiteral:
        - org.exprs.ast.ExNullLiteral
        - org.exprs.ast.ExIntegerLiteral
  visitors:
    defaultJjtreeVisitor:
      context:
        methodTemplate: |
          #macro( methodAnchor $n)
          visit($n.classSimpleName,Object)
          #end

          #evaluate($global.visitorMethodComment)
          default Object visit($node.classSimpleName node, Object data) {
              #if ($node.superNode)
              return visit(($node.superNode.classSimpleName) node, data);
              #else
              return node.childrenAccept(this, data);
              #end
          }
      execute: 'true'
      formatter: java
      genClassName: ${grammar.nodePackage}.${grammar.name}ParserVisitor
      templateFile: foo/bar/VisitorTest.vm
    parameterlessVisitor:
      context:
        methodTemplate: |
          #macro( methodAnchor $node)
          visit($node.classSimpleName)
          #end

          #evaluate($global.visitorMethodComment)
          default void visit($node.classSimpleName node) {
              #if ($node.superNode)
              visit(($node.superNode.classSimpleName) node);
              #else
              node.childrenAccept(this, data);
              #end
          }
      execute: 'true'
      genClassName: ${grammar.name}VisitorX
      templateFile: foo/bar/VisitorTest.vm

