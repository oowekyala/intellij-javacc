/*
 * Generated by JJTricks at Mon May 06 23:55:53 CEST 2019
 * Not intended for manual editing.
 */

public interface JavaVisitorX {

    /** Visits {@linkplain JavaNode JavaNode}. This is the root of the delegation chain. */
    default void visit(JavaNode node) {
        node.childrenAccept(this, data);
    }

    /**
     * Visits {@linkplain VFImportDeclaration ImportDeclaration}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFImportDeclaration node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFDeclaration Declaration}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     *
     * <p>This method is delegated to by:
     *
     * <ul>
     * <li>{@link #visit(VFClassOrInterfaceBodyDeclaration) }
     * <li>{@link #visit(VFConstructorDeclaration) }
     * <li>{@link #visit(VFLocalVariableDeclaration) }
     * <li>{@link #visit(VFFieldDeclaration) }
     * <li>{@link #visit(VFMethodDeclaration) }
     * <li>{@link #visit(VFPackageDeclaration) }
     * <li>{@link #visit(VFBodyDeclaration) }
     * <li>{@link #visit(VFEnumConstant) }
     * <li>{@link #visit(VFTypeDeclaration) }
     * </ul>
     */
    default void visit(VFDeclaration node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFClassOrInterfaceBodyDeclaration ClassOrInterfaceBodyDeclaration}. Delegates to {@link
     * #visit(VFDeclaration) } if unimplemented.
     */
    default void visit(VFClassOrInterfaceBodyDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFConstructorDeclaration ConstructorDeclaration}. Delegates to {@link #visit(VFDeclaration) }
     * if unimplemented.
     */
    default void visit(VFConstructorDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFLocalVariableDeclaration LocalVariableDeclaration}. Delegates to {@link
     * #visit(VFDeclaration) } if unimplemented.
     */
    default void visit(VFLocalVariableDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFFieldDeclaration FieldDeclaration}. Delegates to {@link #visit(VFDeclaration) } if
     * unimplemented.
     */
    default void visit(VFFieldDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFMethodDeclaration MethodDeclaration}. Delegates to {@link #visit(VFDeclaration) } if
     * unimplemented.
     */
    default void visit(VFMethodDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFPackageDeclaration PackageDeclaration}. Delegates to {@link #visit(VFDeclaration) } if
     * unimplemented.
     */
    default void visit(VFPackageDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFBodyDeclaration BodyDeclaration}. Delegates to {@link #visit(VFDeclaration) } if
     * unimplemented.
     */
    default void visit(VFBodyDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFEnumConstant EnumConstant}. Delegates to {@link #visit(VFDeclaration) } if unimplemented.
     */
    default void visit(VFEnumConstant node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFTypeDeclaration TypeDeclaration}. Delegates to {@link #visit(VFDeclaration) } if
     * unimplemented.
     *
     * <p>This method is delegated to by:
     *
     * <ul>
     * <li>{@link #visit(VFAnonymousClassDeclaration) }
     * <li>{@link #visit(VFNamedTypeDeclaration) }
     * </ul>
     */
    default void visit(VFTypeDeclaration node) {
        visit((VFDeclaration) node);
    }

    /**
     * Visits {@linkplain VFAnonymousClassDeclaration AnonymousClassDeclaration}. Delegates to {@link
     * #visit(VFTypeDeclaration) } if unimplemented.
     */
    default void visit(VFAnonymousClassDeclaration node) {
        visit((VFTypeDeclaration) node);
    }

    /**
     * Visits {@linkplain VFNamedTypeDeclaration NamedTypeDeclaration}. Delegates to {@link #visit(VFTypeDeclaration) }
     * if unimplemented.
     *
     * <p>This method is delegated to by:
     *
     * <ul>
     * <li>{@link #visit(VFEnumDeclaration) }
     * <li>{@link #visit(VFAnnotationTypeDeclaration) }
     * <li>{@link #visit(VFClassOrInterfaceDeclaration) }
     * </ul>
     */
    default void visit(VFNamedTypeDeclaration node) {
        visit((VFTypeDeclaration) node);
    }

    /**
     * Visits {@linkplain VFEnumDeclaration EnumDeclaration}. Delegates to {@link #visit(VFNamedTypeDeclaration) } if
     * unimplemented.
     */
    default void visit(VFEnumDeclaration node) {
        visit((VFNamedTypeDeclaration) node);
    }

    /**
     * Visits {@linkplain VFAnnotationTypeDeclaration AnnotationTypeDeclaration}. Delegates to {@link
     * #visit(VFNamedTypeDeclaration) } if unimplemented.
     */
    default void visit(VFAnnotationTypeDeclaration node) {
        visit((VFNamedTypeDeclaration) node);
    }

    /**
     * Visits {@linkplain VFClassOrInterfaceDeclaration ClassOrInterfaceDeclaration}. Delegates to {@link
     * #visit(VFNamedTypeDeclaration) } if unimplemented.
     */
    default void visit(VFClassOrInterfaceDeclaration node) {
        visit((VFNamedTypeDeclaration) node);
    }

    /**
     * Visits {@linkplain VFConditionalExpression VFConditionalExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFConditionalExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFArgumentList VFArgumentList}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFArgumentList node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFForUpdate VFForUpdate}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFForUpdate node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFLiteral VFLiteral}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFLiteral node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFMethodReference VFMethodReference}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFMethodReference node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFVariableInitializer VFVariableInitializer}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFVariableInitializer node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFConditionalOrExpression VFConditionalOrExpression}. Delegates to {@link #visit(JavaNode) }
     * if unimplemented.
     */
    default void visit(VFConditionalOrExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFFinallyStatement VFFinallyStatement}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFFinallyStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFContinueStatement VFContinueStatement}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFContinueStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFExplicitConstructorInvocation VFExplicitConstructorInvocation}. Delegates to {@link
     * #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFExplicitConstructorInvocation node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFUnaryExpressionNotPlusMinus VFUnaryExpressionNotPlusMinus}. Delegates to {@link
     * #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFUnaryExpressionNotPlusMinus node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFEnumBody VFEnumBody}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFEnumBody node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFReferenceType VFReferenceType}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFReferenceType node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFMultiplicativeExpression VFMultiplicativeExpression}. Delegates to {@link #visit(JavaNode) }
     * if unimplemented.
     */
    default void visit(VFMultiplicativeExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFExtendsList VFExtendsList}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFExtendsList node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPostfixExpression VFPostfixExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFPostfixExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFShiftExpression VFShiftExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFShiftExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFAssertStatement VFAssertStatement}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFAssertStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFAllocationExpression VFAllocationExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFAllocationExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFBlock VFBlock}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFBlock node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFMethodDeclarator VFMethodDeclarator}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFMethodDeclarator node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFInclusiveOrExpression VFInclusiveOrExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFInclusiveOrExpression node) {
        visit((JavaNode) node);
    }

    /** Visits {@linkplain VFType VFType}. Delegates to {@link #visit(JavaNode) } if unimplemented. */
    default void visit(VFType node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFCompilationUnit VFCompilationUnit}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFCompilationUnit node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFTypeParameter VFTypeParameter}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFTypeParameter node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFLabeledStatement VFLabeledStatement}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFLabeledStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFAdditiveExpression VFAdditiveExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFAdditiveExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFFormalParameter VFFormalParameter}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFFormalParameter node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFResource VFResource}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFResource node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFTypeArguments VFTypeArguments}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFTypeArguments node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFLambdaExpression VFLambdaExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFLambdaExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFNullLiteral VFNullLiteral}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFNullLiteral node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFAssignmentOperator VFAssignmentOperator}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFAssignmentOperator node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFConditionalAndExpression VFConditionalAndExpression}. Delegates to {@link #visit(JavaNode) }
     * if unimplemented.
     */
    default void visit(VFConditionalAndExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFTryStatement VFTryStatement}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFTryStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFCatchStatement VFCatchStatement}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFCatchStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFVariableDeclarator VFVariableDeclarator}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFVariableDeclarator node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFReturnStatement VFReturnStatement}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFReturnStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFInstanceOfExpression VFInstanceOfExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFInstanceOfExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFWildcardBounds VFWildcardBounds}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFWildcardBounds node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFCastExpression VFCastExpression}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFCastExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFInitializer VFInitializer}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFInitializer node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFTypeBound VFTypeBound}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFTypeBound node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFThrowStatement VFThrowStatement}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFThrowStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFClassOrInterfaceBody VFClassOrInterfaceBody}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFClassOrInterfaceBody node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFBooleanLiteral VFBooleanLiteral}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFBooleanLiteral node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFMarkerAnnotation VFMarkerAnnotation}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFMarkerAnnotation node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFStatement VFStatement}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFMemberSelector VFMemberSelector}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFMemberSelector node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFEqualityExpression VFEqualityExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFEqualityExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPrimaryPrefix VFPrimaryPrefix}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFPrimaryPrefix node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFAnnotation VFAnnotation}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFAnnotation node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFClassOrInterfaceType VFClassOrInterfaceType}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFClassOrInterfaceType node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFExclusiveOrExpression VFExclusiveOrExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFExclusiveOrExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFTypeParameters VFTypeParameters}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFTypeParameters node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFArguments VFArguments}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFArguments node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFRelationalExpression VFRelationalExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFRelationalExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFTypeArgument VFTypeArgument}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFTypeArgument node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPreIncrementExpression VFPreIncrementExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFPreIncrementExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPreDecrementExpression VFPreDecrementExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFPreDecrementExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFArrayInitializer VFArrayInitializer}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFArrayInitializer node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFBreakStatement VFBreakStatement}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFBreakStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPrimitiveType VFPrimitiveType}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFPrimitiveType node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFRSIGNEDSHIFT VFRSIGNEDSHIFT}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFRSIGNEDSHIFT node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFAndExpression VFAndExpression}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFAndExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFExpression VFExpression}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFFormalParameters VFFormalParameters}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFFormalParameters node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFSynchronizedStatement VFSynchronizedStatement}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFSynchronizedStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFResources VFResources}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFResources node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFResourceSpecification VFResourceSpecification}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFResourceSpecification node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFVariableDeclaratorId VFVariableDeclaratorId}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFVariableDeclaratorId node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFUnaryExpression VFUnaryExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFUnaryExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFResultType VFResultType}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFResultType node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPrimarySuffix VFPrimarySuffix}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFPrimarySuffix node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFPrimaryExpression VFPrimaryExpression}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFPrimaryExpression node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFNormalAnnotation VFNormalAnnotation}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFNormalAnnotation node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFNameList VFNameList}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFNameList node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFRUNSIGNEDSHIFT VFRUNSIGNEDSHIFT}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFRUNSIGNEDSHIFT node) {
        visit((JavaNode) node);
    }

    /** Visits {@linkplain VFName VFName}. Delegates to {@link #visit(JavaNode) } if unimplemented. */
    default void visit(VFName node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFArrayDimsAndInits VFArrayDimsAndInits}. Delegates to {@link #visit(JavaNode) } if
     * unimplemented.
     */
    default void visit(VFArrayDimsAndInits node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFBlockStatement VFBlockStatement}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFBlockStatement node) {
        visit((JavaNode) node);
    }

    /**
     * Visits {@linkplain VFImplementsList VFImplementsList}. Delegates to {@link #visit(JavaNode) } if unimplemented.
     */
    default void visit(VFImplementsList node) {
        visit((JavaNode) node);
    }
}
