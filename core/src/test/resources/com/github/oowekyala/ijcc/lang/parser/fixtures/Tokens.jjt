
PARSER_BEGIN(JJTreeParser)

PARSER_END(JJTreeParser)


SPECIAL_TOKEN :
{
  " " | "\t" | "\n" | "\r" | "\f"
}

SKIP : { <"(:"> { commentNestingDepth = 1; } : COMMENT_STATE }

// Comments may be nested
< COMMENT_STATE >  SKIP : {  "(:" { commentNestingDepth++; } }
< COMMENT_STATE >  SKIP : {  ":)" { SwitchTo(--commentNestingDepth == 0 ? DEFAULT : COMMENT_STATE); } }
< COMMENT_STATE >  SKIP : {  < ~[] > }


TOKEN :
{
//  Options is no longer a reserved word (Issue 126)
//  < _OPTIONS: "options" >
  < _LOOKAHEAD: "LOOKAHEAD" >
| < _IGNORE_CASE: "IGNORE_CASE" >
| < _PARSER_BEGIN: "PARSER_BEGIN" >
| < _PARSER_END: "PARSER_END" >
| < _JAVACODE: "JAVACODE" >
| < _TOKEN: "TOKEN" >
| < _SPECIAL_TOKEN: "SPECIAL_TOKEN" >
| < _MORE: "MORE" >
| < _SKIP: "SKIP" >
| < _TOKEN_MGR_DECLS: "TOKEN_MGR_DECLS" >
| < _EOF: "EOF" >
}

TOKEN :
{
  < LEFT_WILDCARD : "*:" <NCNAME> >
| < RIGHT_WILDCARD : <NCNAME> ":*" >
|
  // The actual lexical grammar for NCName is: any name except <CHAR>* ":" <CHAR>*
  < NCNAME: <NAME_START_CHAR_NO_COLON> (<NAME_CHAR_NO_COLON>)* >
|
  < EQNAME: <NCNAME> (":" <NCNAME>)? >
|
  < #NAME_START_CHAR_NO_COLON: [
    "A"-"Z",
    "a"-"z",
    "_",
    "\u00c0"-"\u00d6",
    "\u00d8"-"\u00f6",
    "\u00f8"-"\u02ff",
    "\u0370"-"\u037d",
    "\u037f"-"\u1fff",
    "\u200c"-"\u200d",
    "\u2070"-"\u218f",
    "\u2c00"-"\u2fef",
    "\u3001"-"\ud7ff",
    "\uf900"-"\ufdcf",
    "\ufdf0"-"\ufffd",
    "\u1000"-"\uefff"
  ] >
|
  < #NAME_CHAR_NO_COLON: <NAME_START_CHAR_NO_COLON> | [
  "-",
  ".",
  "0"-"9",
  "\u00b7",
  "\u0300"-"\u036f",
  "\u203f"-"\u2040"
  ] >
}
