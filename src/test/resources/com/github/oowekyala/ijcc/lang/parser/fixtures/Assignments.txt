JCC_FILE
  JccParserDeclarationImpl(JCC_PARSER_DECLARATION)
    PsiElement(PARSER_BEGIN)('PARSER_BEGIN')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
    PsiWhiteSpace('\n\n    ')
    JccJavaCompilationUnitImpl(JCC_JAVA_COMPILATION_UNIT)
      PsiElement(PACKAGE_KEYWORD)('package')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('org')
      PsiElement(.)('.')
      PsiElement(IDENT)('javacc')
      PsiElement(.)('.')
      PsiElement(IDENT)('jjtree')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiComment(DOC_COMMENT)('/**\n     *  This is my parser declaration\n     */')
      PsiWhiteSpace('\n    ')
      PsiElement(public)('public')
      PsiWhiteSpace(' ')
      PsiElement(CLASS_KEYWORD)('class')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('JJTreeParser')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n\n    ')
      PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    PsiElement(PARSER_END)('PARSER_END')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
  PsiWhiteSpace('\n\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('assignments')
      PsiElement(()('(')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n    ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('a')
        PsiElement(=)('=')
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
            JccTokenReferenceUnitImpl(JCC_TOKEN_REFERENCE_UNIT)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('REF')
              PsiElement(>)('>')
      PsiWhiteSpace('\n    ')
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('a')
        PsiElement(=)('=')
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"h"')
      PsiWhiteSpace('\n    ')
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('a')
        PsiElement(=)('=')
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccNamedRegularExpressionImpl(JCC_NAMED_REGULAR_EXPRESSION)
            PsiElement(<)('<')
            PsiWhiteSpace(' ')
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('f')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"olol"')
            PsiElement(>)('>')
      PsiWhiteSpace('\n    ')
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('c')
        PsiElement(=)('=')
        JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('foo')
          PsiElement(()('(')
          JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
            JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
              <empty list>
          PsiElement())(')')
      PsiWhiteSpace('\n    ')
      PsiComment(END_OF_LINE_COMMENT)('// invalid parses')
      PsiWhiteSpace('\n    ')
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('a')
        PsiElement(=)('=')
        PsiErrorElement:<assignable expansion unit> expected, got '('
          <empty list>
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"f"')
        PsiElement())(')')
      PsiWhiteSpace('\n    ')
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('a')
        PsiElement(=)('=')
        PsiErrorElement:<assignable expansion unit> expected, got '['
          <empty list>
      JccOptionalExpansionUnitImpl(JCC_OPTIONAL_EXPANSION_UNIT)
        PsiElement([)('[')
        JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('h')
          PsiElement(()('(')
          JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
            JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
              <empty list>
          PsiElement())(')')
        PsiElement(])(']')
      PsiWhiteSpace('\n    ')
      JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
        JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('a')
        PsiElement(=)('=')
        PsiErrorElement:<assignable expansion unit> expected, got 'try'
          <empty list>
      JccTryCatchExpansionUnitImpl(JCC_TRY_CATCH_EXPANSION_UNIT)
        PsiElement(try)('try')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('foo')
          PsiElement(()('(')
          JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
            JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
              <empty list>
          PsiElement())(')')
        PsiElement(})('}')
        JccCatchClauseImpl(JCC_CATCH_CLAUSE)
          PsiElement(catch)('catch')
          PsiElement(()('(')
          JccJavaNameImpl(JCC_JAVA_NAME)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('Foo')
          PsiWhiteSpace(' ')
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('f')
          PsiElement())(')')
          JccJavaBlockImpl(JCC_JAVA_BLOCK)
            PsiElement({)('{')
            PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement(})('}')