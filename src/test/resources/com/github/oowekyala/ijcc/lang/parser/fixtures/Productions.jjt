options {
    LOOKAHEAD = 4;
    MULTI = true;
}

PARSER_BEGIN(JJTreeParser)

    package org.javacc.jjtree;
    /**
     *  This is my parser declaration
     */
    public class JJTreeParser {

      void jjtreeOpenNodeScope(Node n) {
        ((JJTreeNode)n).setFirstToken(getToken(1));
      }

    }

PARSER_END(JJTreeParser)



void option_binding() #OptionBinding :
	{
	  Token o, v;
	}
{
  ( o=<IDENTIFIER> | o="LOOKAHEAD" | o="IGNORE_CASE" | o="static" )
  "="
  (  v=IntegerLiteral()
   | v=BooleanLiteral()
   | v=StringLiteral()
  ) ";"
}


JAVACODE
void node_descriptor_expression() #NodeDescriptorExpression
{
  Token tok;
  int nesting = 1;
  while (true) {
    tok = getToken(1);
    if (tok.kind == 0) {
      throw new ParseException();
    }
    if (tok.kind == LPAREN) nesting++;
    if (tok.kind == RPAREN) {
      nesting--;
      if (nesting == 0) break;
    }
    tok = getNextToken();
  }
}