JCC_FILE
  JccParserDeclarationImpl(JCC_PARSER_DECLARATION)
    PsiElement(PARSER_BEGIN)('PARSER_BEGIN')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
    PsiWhiteSpace('\n\n')
    JccJavaCompilationUnitImpl(JCC_JAVA_COMPILATION_UNIT)
      <empty list>
    PsiElement(PARSER_END)('PARSER_END')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
  PsiWhiteSpace('\n\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('test1')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('OptionBinding')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
      JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
        JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
          PsiElement(STRING_LITERAL)('"ff"')
    PsiWhiteSpace(' ')
    PsiComment(END_OF_LINE_COMMENT)('// an expansion unit')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('test2')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('OptionBinding')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"ff"')
      PsiWhiteSpace(' ')
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"cd"')
    PsiWhiteSpace(' ')
    PsiComment(END_OF_LINE_COMMENT)('// two expansion units in a sequence')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('test2')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('OptionBinding')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"ff"')
      PsiWhiteSpace(' ')
      PsiElement(|)('|')
      PsiWhiteSpace(' ')
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"cd"')
    PsiWhiteSpace(' ')
    PsiComment(END_OF_LINE_COMMENT)('// each expansion unit is in a sequence, the alternative encloses the two')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('test2')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('OptionBinding')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"ff"')
      PsiWhiteSpace(' ')
      PsiElement(|)('|')
      PsiWhiteSpace(' ')
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"cd"')
      PsiWhiteSpace(' ')
      PsiElement(|)('|')
      PsiWhiteSpace(' ')
      JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"f"')
        PsiWhiteSpace(' ')
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"c"')
    PsiWhiteSpace(' ')
    PsiComment(END_OF_LINE_COMMENT)('// same but check that the node is not left recursive')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('test2')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('OptionBinding')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"ff"')
      PsiWhiteSpace(' ')
      PsiElement(|)('|')
      PsiWhiteSpace(' ')
      JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
        JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
          JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
            PsiElement(STRING_LITERAL)('"cd"')
      PsiWhiteSpace(' ')
      PsiElement(|)('|')
      PsiWhiteSpace(' ')
      JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"f"')
        PsiWhiteSpace(' ')
        JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
              PsiElement(STRING_LITERAL)('"c"')
    PsiWhiteSpace('\n')
    PsiElement(})('}')