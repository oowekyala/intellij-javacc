PARSER_BEGIN(JJTreeParser)

    package org.javacc.jjtree;
    /**
     *  This is my parser declaration
     */
    public class JJTreeParser {

    }

PARSER_END(JJTreeParser)



void parens() :
{}
{

 ("f")+           // necessary
 ("f")*           // necessary
 ("f")?           // necessary

 ("f")            // unnecessary
 (foo())          // unnecessary
 (a=foo())        // unnecessary
 (a="f")          // unnecessary
 (a=<THIS>)        // unnecessary
 (<THIS>)          // unnecessary
 (try{""}catch(foo f){}) // unnecessary
 (["hello"])      // unnecessary
 (("")?)          // unnecessary

 LOOKAHEAD( ("foo" | "bar") )     // unnecessary
 LOOKAHEAD(1, ("foo" | "bar") )   // unnecessary


 ("foo" | "bar") "bzaz"           // necessary
 ("foo" | "bar") | "bzaz"         // unnecessary

 ("foo" "bar")  {}                // unnecessary
 ("foo" "bar")  (foo() | "f")   // unnecessary, necessary
}

 void foo():{}{ ("") }            // unnecessary
