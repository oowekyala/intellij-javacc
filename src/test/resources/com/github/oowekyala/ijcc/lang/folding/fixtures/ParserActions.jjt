<fold text='/PARSER DECLARATION/' expand='false'>PARSER_BEGIN(JJTreeParser)
PARSER_END(JJTreeParser)</fold>

<fold text='SKIP: {..}' expand='false'>< COMMENT_STATE >  SKIP : {
    "(:"</fold> <fold text="{..}">{ commentNestingDepth++; }
}


void QuantifiedExpr():
{}
{
  (<SOME> <fold text="{..}">{ jjtThis.setUniversallyQuantified(false); })
  VarBindingList(false)
  <SATISFIES> ExprSingle()
}

JAVACODE
void node_descriptor_expression() #NodeDescriptorExpression
{
  Token tok;
  int nesting = 1;
  while (true) {
    tok = getToken(1);
    if (tok.kind == 0) {
      throw new ParseException();
    }
    if (tok.kind == LPAREN) nesting++;
    if (tok.kind == RPAREN) {
      nesting--;
      if (nesting == 0) break;
    }
    tok = getNextToken();
  }
}