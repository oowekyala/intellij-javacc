JCC_FILE
  JccOptionSectionImpl(JCC_OPTION_SECTION)
    PsiElement(IDENT)('options')
    PsiWhiteSpace(' ')
    PsiElement({)('{')
    PsiWhiteSpace('\n    ')
    JccOptionBindingImpl(JCC_OPTION_BINDING)
      PsiElement(LOOKAHEAD)('LOOKAHEAD')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JccOptionValueImpl(JCC_OPTION_VALUE)
        PsiElement(INTEGER_LITERAL)('4')
      PsiElement(;)(';')
    PsiWhiteSpace('\n    ')
    JccOptionBindingImpl(JCC_OPTION_BINDING)
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('MULTI')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JccOptionValueImpl(JCC_OPTION_VALUE)
        JccBooleanLiteralImpl(JCC_BOOLEAN_LITERAL)
          PsiElement(true)('true')
      PsiElement(;)(';')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccParserDeclarationImpl(JCC_PARSER_DECLARATION)
    PsiElement(PARSER_BEGIN)('PARSER_BEGIN')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
    PsiWhiteSpace('\n\n    ')
    JccJavaCompilationUnitImpl(JCC_JAVA_COMPILATION_UNIT)
      PsiElement(PACKAGE_KEYWORD)('package')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('org')
      PsiElement(.)('.')
      PsiElement(IDENT)('javacc')
      PsiElement(.)('.')
      PsiElement(IDENT)('jjtree')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiComment(DOC_COMMENT)('/**\n     *  This is my parser declaration\n     */')
      PsiWhiteSpace('\n    ')
      PsiElement(public)('public')
      PsiWhiteSpace(' ')
      PsiElement(CLASS_KEYWORD)('class')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('JJTreeParser')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n\n      ')
      PsiElement(void)('void')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('jjtreeOpenNodeScope')
      PsiElement(()('(')
      PsiElement(IDENT)('Node')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('n')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n        ')
      PsiElement(()('(')
      PsiElement(()('(')
      PsiElement(IDENT)('JJTreeNode')
      PsiElement())(')')
      PsiElement(IDENT)('n')
      PsiElement())(')')
      PsiElement(.)('.')
      PsiElement(IDENT)('setFirstToken')
      PsiElement(()('(')
      PsiElement(IDENT)('getToken')
      PsiElement(()('(')
      PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
      PsiElement())(')')
      PsiElement(;)(';')
      PsiWhiteSpace('\n      ')
      PsiElement(})('}')
      PsiWhiteSpace('\n\n    ')
      PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    PsiElement(PARSER_END)('PARSER_END')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
  PsiWhiteSpace('\n\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('option_binding')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('OptionBinding')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace('\n\t')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiWhiteSpace('\n\t  ')
      PsiElement(IDENT)('Token')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('o')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('v')
      PsiElement(;)(';')
      PsiWhiteSpace('\n\t')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('o')
            PsiElement(=)('=')
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('IDENTIFIER')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('o')
            PsiElement(=)('=')
            JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
              PsiElement(STRING_LITERAL)('"LOOKAHEAD"')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('o')
            PsiElement(=)('=')
            JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
              PsiElement(STRING_LITERAL)('"IGNORE_CASE"')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('o')
            PsiElement(=)('=')
            JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
              PsiElement(STRING_LITERAL)('"static"')
        PsiWhiteSpace(' ')
        PsiElement())(')')
      PsiWhiteSpace('\n  ')
      JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
        PsiElement(STRING_LITERAL)('"="')
      PsiWhiteSpace('\n  ')
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace('  ')
        JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('v')
            PsiElement(=)('=')
            JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('IntegerLiteral')
              PsiElement(()('(')
              JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
                JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                  <empty list>
              PsiElement())(')')
          PsiWhiteSpace('\n   ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('v')
            PsiElement(=)('=')
            JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('BooleanLiteral')
              PsiElement(()('(')
              JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
                JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                  <empty list>
              PsiElement())(')')
          PsiWhiteSpace('\n   ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccAssignedExpansionUnitImpl(JCC_ASSIGNED_EXPANSION_UNIT)
            JccJavaAssignmentLhsImpl(JCC_JAVA_ASSIGNMENT_LHS)
              JccJavaNameImpl(JCC_JAVA_NAME)
                JccIdentifierImpl(JCC_IDENTIFIER)
                  PsiElement(IDENT)('v')
            PsiElement(=)('=')
            JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('StringLiteral')
              PsiElement(()('(')
              JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
                JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                  <empty list>
              PsiElement())(')')
        PsiWhiteSpace('\n  ')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
        PsiElement(STRING_LITERAL)('";"')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n\n')
  JccJavacodeProductionImpl(JCC_JAVACODE_PRODUCTION)
    PsiElement(JAVACODE)('JAVACODE')
    PsiWhiteSpace('\n')
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('node_descriptor_expression')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('NodeDescriptorExpression')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiWhiteSpace('\n  ')
      PsiElement(IDENT)('Token')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('tok')
      PsiElement(;)(';')
      PsiWhiteSpace('\n  ')
      PsiElement(PRIMITIVE_TYPE)('int')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('nesting')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('1')
      PsiElement(;)(';')
      PsiWhiteSpace('\n  ')
      PsiElement(WHILE_KEYWORD)('while')
      PsiWhiteSpace(' ')
      PsiElement(()('(')
      PsiElement(true)('true')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n    ')
      PsiElement(IDENT)('tok')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('getToken')
      PsiElement(()('(')
      PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiElement(IF_KEYWORD)('if')
      PsiWhiteSpace(' ')
      PsiElement(()('(')
      PsiElement(IDENT)('tok')
      PsiElement(.)('.')
      PsiElement(IDENT)('kind')
      PsiWhiteSpace(' ')
      PsiElement(EQEQ)('==')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('0')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n      ')
      PsiElement(THROW_KEYWORD)('throw')
      PsiWhiteSpace(' ')
      PsiElement(NEW_KEYWORD)('new')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('ParseException')
      PsiElement(()('(')
      PsiElement())(')')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiElement(})('}')
      PsiWhiteSpace('\n    ')
      PsiElement(IF_KEYWORD)('if')
      PsiWhiteSpace(' ')
      PsiElement(()('(')
      PsiElement(IDENT)('tok')
      PsiElement(.)('.')
      PsiElement(IDENT)('kind')
      PsiWhiteSpace(' ')
      PsiElement(EQEQ)('==')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('LPAREN')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('nesting')
      PsiElement(PLUSPLUS)('++')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiElement(IF_KEYWORD)('if')
      PsiWhiteSpace(' ')
      PsiElement(()('(')
      PsiElement(IDENT)('tok')
      PsiElement(.)('.')
      PsiElement(IDENT)('kind')
      PsiWhiteSpace(' ')
      PsiElement(EQEQ)('==')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('RPAREN')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n      ')
      PsiElement(IDENT)('nesting')
      PsiElement(MINUSMINUS)('--')
      PsiElement(;)(';')
      PsiWhiteSpace('\n      ')
      PsiElement(IF_KEYWORD)('if')
      PsiWhiteSpace(' ')
      PsiElement(()('(')
      PsiElement(IDENT)('nesting')
      PsiWhiteSpace(' ')
      PsiElement(EQEQ)('==')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('0')
      PsiElement())(')')
      PsiWhiteSpace(' ')
      PsiElement(BREAK_KEYWORD)('break')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiElement(})('}')
      PsiWhiteSpace('\n    ')
      PsiElement(IDENT)('tok')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('getNextToken')
      PsiElement(()('(')
      PsiElement())(')')
      PsiElement(;)(';')
      PsiWhiteSpace('\n  ')
      PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
  PsiWhiteSpace('\n\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        JccJavaNameImpl(JCC_JAVA_NAME)
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('String')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('ComparisonOperator')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      PsiElement(void)('void')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n   ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('COMP')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('NE')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('EQ')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('LT')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('LE')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('GT')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('GE')
              PsiElement(>)('>')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('IS')
              PsiElement(>)('>')
        PsiWhiteSpace(' ')
        PsiElement())(')')
      PsiWhiteSpace('\n   ')
      JccParserActionsUnitImpl(JCC_PARSER_ACTIONS_UNIT)
        JccJavaBlockImpl(JCC_JAVA_BLOCK)
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          PsiElement(RETURN_KEYWORD)('return')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('token')
          PsiElement(.)('.')
          PsiElement(IDENT)('getImage')
          PsiElement(()('(')
          PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('StringConcatExpr')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('StringConcatExpr')
      PsiElement(()('(')
      JccJjtreeNodeDescriptorExprImpl(JCC_JJTREE_NODE_DESCRIPTOR_EXPR)
        PsiElement(>)('>')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('RangeExpr')
        PsiElement(()('(')
        JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
          JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
            <empty list>
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
          JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
            PsiElement(STRING_LITERAL)('"||"')
          PsiWhiteSpace(' ')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('RangeExpr')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement())(')')
        JccZeroOrMoreImpl(JCC_ZERO_OR_MORE)
          PsiElement(*)('*')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('RangeExpr')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('RangeExpr')
      PsiElement(()('(')
      JccJjtreeNodeDescriptorExprImpl(JCC_JJTREE_NODE_DESCRIPTOR_EXPR)
        PsiElement(>)('>')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('AdditiveExpr')
        PsiElement(()('(')
        JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
          JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
            <empty list>
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
          JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
            PsiElement(<)('<')
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('TO')
            PsiElement(>)('>')
          PsiWhiteSpace(' ')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('AdditiveExpr')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement())(')')
        JccZeroOrOneImpl(JCC_ZERO_OR_ONE)
          PsiElement(?)('?')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  PsiComment(END_OF_LINE_COMMENT)('// In the following, we use nodes to represent the operators because there may be several expressions chained.')
  PsiWhiteSpace('\n')
  PsiComment(END_OF_LINE_COMMENT)('// e.g. E1 + E2 - E3 ~> E1 PlusOperator E2 MinusOperator E3')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('AdditiveExpr')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('AdditiveExpr')
      PsiElement(()('(')
      JccJjtreeNodeDescriptorExprImpl(JCC_JJTREE_NODE_DESCRIPTOR_EXPR)
        PsiElement(>)('>')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('MultiplicativeExpr')
        PsiElement(()('(')
        JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
          JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
            <empty list>
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('AdditiveOperator')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
          PsiWhiteSpace(' ')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('MultiplicativeExpr')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement())(')')
        JccZeroOrMoreImpl(JCC_ZERO_OR_MORE)
          PsiElement(*)('*')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('AdditiveOperator')
      PsiElement(()('(')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n    ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
              PsiElement(STRING_LITERAL)('"+"')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
              PsiElement(STRING_LITERAL)('"-"')
        PsiWhiteSpace(' ')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParserActionsUnitImpl(JCC_PARSER_ACTIONS_UNIT)
        JccJavaBlockImpl(JCC_JAVA_BLOCK)
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('jjtThis')
          PsiElement(.)('.')
          PsiElement(IDENT)('setImage')
          PsiElement(()('(')
          PsiElement(IDENT)('getToken')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('0')
          PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(IDENT)('getImage')
          PsiElement(()('(')
          PsiElement())(')')
          PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('MultiplicativeExpr')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('MultiplicativeExpr')
      PsiElement(()('(')
      JccJjtreeNodeDescriptorExprImpl(JCC_JJTREE_NODE_DESCRIPTOR_EXPR)
        PsiElement(>)('>')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('UnionExpr')
        PsiElement(()('(')
        JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
          JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
            <empty list>
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('MultiplicativeOperator')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
          PsiWhiteSpace(' ')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('UnionExpr')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
        PsiElement())(')')
        JccZeroOrMoreImpl(JCC_ZERO_OR_MORE)
          PsiElement(*)('*')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('MultiplicativeOperator')
      PsiElement(()('(')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n    ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace('   ')
        JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('STAR')
              PsiElement(>)('>')
          PsiWhiteSpace('\n      ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('DIV')
              PsiElement(>)('>')
          PsiWhiteSpace('\n      ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('IDIV')
              PsiElement(>)('>')
          PsiWhiteSpace('\n      ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('MOD')
              PsiElement(>)('>')
        PsiWhiteSpace('\n    ')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParserActionsUnitImpl(JCC_PARSER_ACTIONS_UNIT)
        JccJavaBlockImpl(JCC_JAVA_BLOCK)
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('jjtThis')
          PsiElement(.)('.')
          PsiElement(IDENT)('setImage')
          PsiElement(()('(')
          PsiElement(IDENT)('getToken')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('0')
          PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(IDENT)('getImage')
          PsiElement(()('(')
          PsiElement())(')')
          PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('UnionExpr')
      PsiElement(()('(')
      PsiElement())(')')
    PsiWhiteSpace(' ')
    JccJjtreeNodeDescriptorImpl(JCC_JJTREE_NODE_DESCRIPTOR)
      PsiElement(#)('#')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('UnionExpr')
      PsiElement(()('(')
      JccJjtreeNodeDescriptorExprImpl(JCC_JJTREE_NODE_DESCRIPTOR_EXPR)
        PsiElement(>)('>')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(INTEGER_LITERAL)('1')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n  ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('IntersectExceptExpr')
        PsiElement(()('(')
        JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
          JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
            <empty list>
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('UnionOperator')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
          PsiWhiteSpace(' ')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('IntersectExceptExpr')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
                <empty list>
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement())(')')
        JccZeroOrMoreImpl(JCC_ZERO_OR_MORE)
          PsiElement(*)('*')
    PsiWhiteSpace('\n')
    PsiElement(})('}')
  PsiWhiteSpace('\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('UnionOperator')
      PsiElement(()('(')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace('\n')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n    ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccRegularExpressionReferenceImpl(JCC_REGULAR_EXPRESSION_REFERENCE)
              PsiElement(<)('<')
              JccIdentifierImpl(JCC_IDENTIFIER)
                PsiElement(IDENT)('UNION')
              PsiElement(>)('>')
          PsiWhiteSpace('\n    ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
            JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
              PsiElement(STRING_LITERAL)('"|"')
            PsiWhiteSpace(' ')
            JccParserActionsUnitImpl(JCC_PARSER_ACTIONS_UNIT)
              JccJavaBlockImpl(JCC_JAVA_BLOCK)
                PsiElement({)('{')
                PsiWhiteSpace(' ')
                PsiElement(IDENT)('jjtThis')
                PsiElement(.)('.')
                PsiElement(IDENT)('setShorthand')
                PsiElement(()('(')
                PsiElement(true)('true')
                PsiElement())(')')
                PsiElement(;)(';')
                PsiWhiteSpace(' ')
                PsiElement(})('}')
        PsiWhiteSpace('\n    ')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      JccParserActionsUnitImpl(JCC_PARSER_ACTIONS_UNIT)
        JccJavaBlockImpl(JCC_JAVA_BLOCK)
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('jjtThis')
          PsiElement(.)('.')
          PsiElement(IDENT)('setImage')
          PsiElement(()('(')
          PsiElement(IDENT)('getToken')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('0')
          PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(IDENT)('getImage')
          PsiElement(()('(')
          PsiElement())(')')
          PsiElement())(')')
          PsiElement(;)(';')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement(})('}')