JCC_FILE
  JccGrammarFileRootImpl(JCC_GRAMMAR_FILE_ROOT)
    JccParserDeclarationImpl(JCC_PARSER_DECLARATION)
      JccParserBeginImpl(JCC_PARSER_BEGIN)
        PsiElement(PARSER_BEGIN)('PARSER_BEGIN')
        PsiElement(()('(')
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('JJTreeParser')
        PsiElement())(')')
      JccJavaCompilationUnitImpl(JCC_JAVA_COMPILATION_UNIT)
        PsiElement(PACKAGE_KEYWORD)('package')
        PsiElement(IDENT)('org')
        PsiElement(.)('.')
        PsiElement(IDENT)('javacc')
        PsiElement(.)('.')
        PsiElement(IDENT)('jjtree')
        PsiElement(;)(';')
        PsiDocComment
          PsiElement(DOC_COMMENT_START)('/**')
          PsiElement(DOC_COMMENT_LEADING_ASTERISKS)('*')
          PsiElement(DOC_COMMENT_DATA)('  This is my parser declaration')
          PsiElement(DOC_COMMENT_END)('*/')
        PsiElement(public)('public')
        PsiElement(CLASS_KEYWORD)('class')
        PsiElement(IDENT)('JJTreeParser')
        PsiElement({)('{')
        PsiElement(})('}')
      JccParserEndImpl(JCC_PARSER_END)
        PsiElement(PARSER_END)('PARSER_END')
        PsiElement(()('(')
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('JJTreeParser')
        PsiElement())(')')
    JccBnfProductionImpl(lookaheads)
      JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
        JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
          <empty list>
        JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
          PsiElement(void)('void')
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('lookaheads')
        PsiElement(()('(')
        PsiElement())(')')
      PsiElement(:)(':')
      JccJavaBlockImpl(JCC_JAVA_BLOCK)
        PsiElement({)('{')
        PsiElement(})('}')
      PsiElement({)('{')
      JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
        JccLocalLookaheadUnitImpl(JCC_LOCAL_LOOKAHEAD_UNIT)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement(,)(',')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('ID')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              <empty list>
            PsiElement())(')')
          PsiElement(,)(',')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('getToken')
            PsiElement(()('(')
            PsiElement(INTEGER_LITERAL)('1')
            PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(IDENT)('kind')
            PsiElement(NE)('!=')
            PsiElement(IDENT)('NATURAL')
          PsiElement(})('}')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// lexical, syntactic, semantic')
        JccLocalLookaheadUnitImpl(JCC_LOCAL_LOOKAHEAD_UNIT)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('getToken')
            PsiElement(()('(')
            PsiElement(INTEGER_LITERAL)('1')
            PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(IDENT)('kind')
            PsiElement(NE)('!=')
            PsiElement(IDENT)('NATURAL')
          PsiElement(})('}')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// semantic, not syntactic')
        JccLocalLookaheadUnitImpl(JCC_LOCAL_LOOKAHEAD_UNIT)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// lexical')
        JccLocalLookaheadUnitImpl(JCC_LOCAL_LOOKAHEAD_UNIT)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('TableAlias')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              <empty list>
            PsiElement())(')')
          PsiElement(,)(',')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('getToken')
            PsiElement(()('(')
            PsiElement(INTEGER_LITERAL)('1')
            PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(IDENT)('kind')
            PsiElement(NE)('!=')
            PsiElement(IDENT)('NATURAL')
          PsiElement(})('}')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// syntactic, semantic')
        JccLocalLookaheadUnitImpl(JCC_LOCAL_LOOKAHEAD_UNIT)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement(,)(',')
          JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
            PsiElement(()('(')
            JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
              JccRegexExpansionUnitImpl(JCC_REGEX_EXPANSION_UNIT)
                JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
                  JccLiteralRegexUnitImpl(JCC_LITERAL_REGEX_UNIT)
                    PsiElement(STRING_LITERAL)('"foo"')
              PsiElement(|)('|')
              JccRegexExpansionUnitImpl(JCC_REGEX_EXPANSION_UNIT)
                JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
                  JccLiteralRegexUnitImpl(JCC_LITERAL_REGEX_UNIT)
                    PsiElement(STRING_LITERAL)('"bar"')
            PsiElement())(')')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// lexical, syntactic')
        JccLocalLookaheadUnitImpl(JCC_LOCAL_LOOKAHEAD_UNIT)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('doSth')
            PsiElement(()('(')
            PsiElement())(')')
            PsiElement(;)(';')
          PsiElement(})('}')
          PsiErrorElement:')' expected, got ','
            <empty list>
      PsiElement(,)(',')
      PsiElement({)('{')
  PsiErrorElement:<regex production> or TOKEN_MGR_DECLS expected, got 'getToken'
    PsiElement(IDENT)('getToken')
  PsiElement(DUMMY_BLOCK)
    PsiElement(()('(')
    PsiElement(INTEGER_LITERAL)('1')
    PsiElement())(')')
    PsiElement(.)('.')
    PsiElement(IDENT)('kind')
    PsiElement(NE)('!=')
    PsiElement(IDENT)('NATURAL')
    PsiElement(})('}')
    PsiElement())(')')
    PsiComment(END_OF_LINE_COMMENT)('// invalid parse')
    PsiElement(})('}')