JCC_FILE
  JccGrammarFileRootImpl(JCC_GRAMMAR_FILE_ROOT)
    JccParserDeclarationImpl(JCC_PARSER_DECLARATION)
      PsiElement(PARSER_BEGIN)('PARSER_BEGIN')
      PsiElement(()('(')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('JJTreeParser')
      PsiElement())(')')
      JccJavaCompilationUnitImpl(JCC_JAVA_COMPILATION_UNIT)
        PsiElement(PACKAGE_KEYWORD)('package')
        PsiElement(IDENT)('org')
        PsiElement(.)('.')
        PsiElement(IDENT)('javacc')
        PsiElement(.)('.')
        PsiElement(IDENT)('jjtree')
        PsiElement(;)(';')
        PsiComment(DOC_COMMENT)('/**\n     *  This is my parser declaration\n     */')
        PsiElement(public)('public')
        PsiElement(CLASS_KEYWORD)('class')
        PsiElement(IDENT)('JJTreeParser')
        PsiElement({)('{')
        PsiElement(})('}')
      PsiElement(PARSER_END)('PARSER_END')
      PsiElement(()('(')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('JJTreeParser')
      PsiElement())(')')
    JccBnfProductionImpl(JCC_BNF_PRODUCTION)
      JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
        JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
          <empty list>
        JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
          PsiElement(void)('void')
        JccIdentifierImpl(JCC_IDENTIFIER)
          PsiElement(IDENT)('lookaheads')
        PsiElement(()('(')
        PsiElement())(')')
      PsiElement(:)(':')
      JccJavaBlockImpl(JCC_JAVA_BLOCK)
        PsiElement({)('{')
        PsiElement(})('}')
      PsiElement({)('{')
      JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
        JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement(,)(',')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('ID')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              <empty list>
            PsiElement())(')')
          PsiElement(,)(',')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('getToken')
            PsiElement(()('(')
            PsiElement(INTEGER_LITERAL)('1')
            PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(IDENT)('kind')
            PsiElement(NE)('!=')
            PsiElement(IDENT)('NATURAL')
          PsiElement(})('}')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// lexical, syntactic, semantic')
        JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('getToken')
            PsiElement(()('(')
            PsiElement(INTEGER_LITERAL)('1')
            PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(IDENT)('kind')
            PsiElement(NE)('!=')
            PsiElement(IDENT)('NATURAL')
          PsiElement(})('}')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// semantic, not syntactic')
        JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// lexical')
        JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
            JccIdentifierImpl(JCC_IDENTIFIER)
              PsiElement(IDENT)('TableAlias')
            PsiElement(()('(')
            JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
              <empty list>
            PsiElement())(')')
          PsiElement(,)(',')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('getToken')
            PsiElement(()('(')
            PsiElement(INTEGER_LITERAL)('1')
            PsiElement())(')')
            PsiElement(.)('.')
            PsiElement(IDENT)('kind')
            PsiElement(NE)('!=')
            PsiElement(IDENT)('NATURAL')
          PsiElement(})('}')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// syntactic, semantic')
        JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement(,)(',')
          JccParenthesizedExpansionUnitImpl(JCC_PARENTHESIZED_EXPANSION_UNIT)
            PsiElement(()('(')
            JccExpansionAlternativeImpl(JCC_EXPANSION_ALTERNATIVE)
              JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
                JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
                  JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
                    PsiElement(STRING_LITERAL)('"foo"')
              PsiElement(|)('|')
              JccRegexpExpansionUnitImpl(JCC_REGEXP_EXPANSION_UNIT)
                JccLiteralRegularExpressionImpl(JCC_LITERAL_REGULAR_EXPRESSION)
                  JccLiteralRegexpUnitImpl(JCC_LITERAL_REGEXP_UNIT)
                    PsiElement(STRING_LITERAL)('"bar"')
            PsiElement())(')')
          PsiElement())(')')
        PsiComment(END_OF_LINE_COMMENT)('// lexical, semantic')
        JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
          PsiElement(LOOKAHEAD)('LOOKAHEAD')
          PsiElement(()('(')
          PsiElement({)('{')
          JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
            PsiElement(IDENT)('doSth')
            PsiElement(()('(')
            PsiElement())(')')
            PsiElement(;)(';')
          PsiElement(})('}')
          PsiErrorElement:')' expected, got ','
            <empty list>
  PsiElement(,)(',')
  PsiElement(DUMMY_BLOCK)
    PsiElement({)('{')
    PsiElement(IDENT)('getToken')
    PsiElement(()('(')
    PsiElement(INTEGER_LITERAL)('1')
    PsiElement())(')')
    PsiElement(.)('.')
    PsiElement(IDENT)('kind')
    PsiElement(NE)('!=')
    PsiElement(IDENT)('NATURAL')
    PsiElement(})('}')
  PsiElement())(')')
  PsiComment(END_OF_LINE_COMMENT)('// invalid parse')
  PsiElement(})('}')