JCC_FILE
  JccParserDeclarationImpl(JCC_PARSER_DECLARATION)
    PsiElement(PARSER_BEGIN)('PARSER_BEGIN')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
    PsiWhiteSpace('\n\n    ')
    JccJavaCompilationUnitImpl(JCC_JAVA_COMPILATION_UNIT)
      PsiElement(PACKAGE_KEYWORD)('package')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('org')
      PsiElement(.)('.')
      PsiElement(IDENT)('javacc')
      PsiElement(.)('.')
      PsiElement(IDENT)('jjtree')
      PsiElement(;)(';')
      PsiWhiteSpace('\n    ')
      PsiComment(DOC_COMMENT)('/**\n     *  This is my parser declaration\n     */')
      PsiWhiteSpace('\n    ')
      PsiElement(public)('public')
      PsiWhiteSpace(' ')
      PsiElement(CLASS_KEYWORD)('class')
      PsiWhiteSpace(' ')
      PsiElement(IDENT)('JJTreeParser')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n\n    ')
      PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    PsiElement(PARSER_END)('PARSER_END')
    PsiElement(()('(')
    JccIdentifierImpl(JCC_IDENTIFIER)
      PsiElement(IDENT)('JJTreeParser')
    PsiElement())(')')
  PsiWhiteSpace('\n\n\n\n')
  JccBnfProductionImpl(JCC_BNF_PRODUCTION)
    JccJavaNonTerminalProductionHeaderImpl(JCC_JAVA_NON_TERMINAL_PRODUCTION_HEADER)
      JccJavaAccessModifierImpl(JCC_JAVA_ACCESS_MODIFIER)
        <empty list>
      JccJavaReturnTypeImpl(JCC_JAVA_RETURN_TYPE)
        PsiElement(void)('void')
      PsiWhiteSpace(' ')
      JccIdentifierImpl(JCC_IDENTIFIER)
        PsiElement(IDENT)('lookaheads')
      PsiElement(()('(')
      PsiElement())(')')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    JccJavaBlockImpl(JCC_JAVA_BLOCK)
      PsiElement({)('{')
      PsiElement(})('}')
    PsiWhiteSpace('\n')
    PsiElement({)('{')
    PsiWhiteSpace('\n    ')
    JccExpansionSequenceImpl(JCC_EXPANSION_SEQUENCE)
      JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
        PsiElement(LOOKAHEAD)('LOOKAHEAD')
        PsiElement(()('(')
        PsiElement(INTEGER_LITERAL)('1')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('ID')
          PsiElement(()('(')
          JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
            JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
              <empty list>
          PsiElement())(')')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(IDENT)('getToken')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(IDENT)('kind')
          PsiWhiteSpace(' ')
          PsiElement(NE)('!=')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('NATURAL')
        PsiElement(})('}')
        PsiElement())(')')
      PsiWhiteSpace('       ')
      PsiComment(END_OF_LINE_COMMENT)('// lexical, syntactic, semantic')
      PsiWhiteSpace('\n    ')
      JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
        PsiElement(LOOKAHEAD)('LOOKAHEAD')
        PsiElement(()('(')
        PsiElement({)('{')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(IDENT)('getToken')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(IDENT)('kind')
          PsiWhiteSpace(' ')
          PsiElement(NE)('!=')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('NATURAL')
        PsiElement(})('}')
        PsiElement())(')')
      PsiWhiteSpace('                ')
      PsiComment(END_OF_LINE_COMMENT)('// semantic, not syntactic')
      PsiWhiteSpace('\n    ')
      JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
        PsiElement(LOOKAHEAD)('LOOKAHEAD')
        PsiElement(()('(')
        PsiElement(INTEGER_LITERAL)('1')
        PsiElement())(')')
      PsiWhiteSpace('                                            ')
      PsiComment(END_OF_LINE_COMMENT)('// lexical')
      PsiWhiteSpace('\n    ')
      JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
        PsiElement(LOOKAHEAD)('LOOKAHEAD')
        PsiElement(()('(')
        JccNonTerminalExpansionUnitImpl(JCC_NON_TERMINAL_EXPANSION_UNIT)
          JccIdentifierImpl(JCC_IDENTIFIER)
            PsiElement(IDENT)('TableAlias')
          PsiElement(()('(')
          JccJavaExpressionListImpl(JCC_JAVA_EXPRESSION_LIST)
            JccCommaSeparatedListImpl(JCC_COMMA_SEPARATED_LIST)
              <empty list>
          PsiElement())(')')
        PsiElement(,)(',')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(IDENT)('getToken')
          PsiElement(()('(')
          PsiElement(INTEGER_LITERAL)('1')
          PsiElement())(')')
          PsiElement(.)('.')
          PsiElement(IDENT)('kind')
          PsiWhiteSpace(' ')
          PsiElement(NE)('!=')
          PsiWhiteSpace(' ')
          PsiElement(IDENT)('NATURAL')
        PsiElement(})('}')
        PsiElement())(')')
      PsiWhiteSpace('  ')
      PsiComment(END_OF_LINE_COMMENT)('// syntactic, semantic')
      PsiWhiteSpace('\n    ')
      JccLocalLookaheadImpl(JCC_LOCAL_LOOKAHEAD)
        PsiElement(LOOKAHEAD)('LOOKAHEAD')
        PsiElement(()('(')
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        JccJavaExpressionImpl(JCC_JAVA_EXPRESSION)
          PsiElement(IDENT)('doSth')
          PsiElement(()('(')
          PsiElement())(')')
          PsiElement(;)(';')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
        PsiErrorElement:',' unexpected
          PsiElement(,)(',')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiElement(IDENT)('getToken')
        PsiElement(()('(')
        PsiElement(INTEGER_LITERAL)('1')
        PsiElement())(')')
      PsiErrorElement:'#' or <priv expansion unit> expected, got '.'
        PsiElement(.)('.')
  PsiElement(IDENT)('kind')
  PsiWhiteSpace(' ')
  PsiElement(NE)('!=')
  PsiWhiteSpace(' ')
  PsiElement(IDENT)('NATURAL')
  PsiElement(})('}')
  PsiElement())(')')
  PsiWhiteSpace('  ')
  PsiComment(END_OF_LINE_COMMENT)('// invalid parse')
  PsiWhiteSpace('\n')
  PsiElement(})('}')