<idea-plugin>
    <id>com.github.oowekyala.javacc</id>
    <name>JavaCC</name>
    <description><![CDATA[
        <p>Support for JavaCC and JJTree grammar files.</p>

        <p>
            Offers comprehensive language support for the JavaCC parser generator and its JJTree preprocessor.
            Do you like it? Give it a star at <a href="https://github.com/oowekyala/intellij-javacc">GitHub</a>.
            Rate it at <a href="https://plugins.jetbrains.com/plugin/11431-javacc">plugins.jetbrains.com</a>. Thanks!
        </p>

        <h4>Main features</h4>

        <ul>
            <li><b>JavaCC support:</b> Jump to declaration and find usages, structure view, quick documentation, etc.
            </li>
            <li><b>JJTree support:</b> Jump to node class, some tooling to detect common errors, etc.</li>
            <li><b>Java language injection:</b> Code completion, quick documentation, usage resolution, etc.</li>
            <li><b>Inspections and intentions:</b>
                Including unnecessary parentheses detection, unreachable production
                detection, ambiguous JJTree node descriptor, etc.
            </li>
        </ul>

        Visit the <a href="https://github.com/oowekyala/intellij-javacc">GitHub</a> README for more details.

        <h4>Usage notes</h4>

        <ul>
            <li>I recommend to define an easy shortcut for fold/unfold region from the start if you don't have any</li>
            <li>
                Code insight in Java fragments works best when the token manager and other supporting files have already
                been generated.
            </li>
            <li>
                Please <a href="https://github.com/oowekyala/intellij-javacc/issues">report issues</a> if you encounter
                any.
                The Java injection support in particular is still quite fragile. Contributions are most welcome as well!
            </li>
        </ul>
        ]]>
    </description>

    <vendor email="clement.fournier76@gmail.com" url="https://github.com/oowekyala">Cl√©ment Fournier</vendor>
    <idea-version since-build="182"/>

    <application-components>
        <!-- Add your application components here -->
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <actions>
        <!-- Add your actions here -->
    </actions>

    <extensions defaultExtensionNs="com.intellij">


        <projectConfigurable
                instance="com.github.oowekyala.ijcc.settings.JavaccProjectSettingsConfigurable"
                displayName="JavaCC"
                id="language.javacc"
                groupId="language"
        />

        <projectService serviceInterface="com.github.oowekyala.ijcc.settings.JavaccProjectSettingsService"
                        serviceImplementation="com.github.oowekyala.ijcc.settings.JavaccProjectSettingsServiceImpl"/>

        <additionalTextAttributes scheme="Darcula" file="com/github/oowekyala/ijcc/colorSchemes/Darcula_Javacc.xml"/>
        <additionalTextAttributes scheme="Default" file="com/github/oowekyala/ijcc/colorSchemes/Default_Javacc.xml"/>

        <fileTypeFactory implementation="com.github.oowekyala.ijcc.JavaccFileTypeFactory"/>
        <colorSettingsPage implementation="com.github.oowekyala.ijcc.insight.highlight.JavaccColorSettingsPage"/>

        <renamePsiElementProcessor implementation="com.github.oowekyala.ijcc.lang.refs.JccRenameProcessor"/>
        <lang.namesValidator language="JavaCC"
                             implementationClass="com.github.oowekyala.ijcc.lang.refs.JccNamesValidator"/>
        <lang.parserDefinition
                language="JavaCC" implementationClass="com.github.oowekyala.ijcc.JavaccParserDefinition"/>
        <lang.syntaxHighlighterFactory
                language="JavaCC"
                implementationClass="com.github.oowekyala.ijcc.insight.highlight.JavaccSyntaxHighlighterFactory"/>
        <lang.commenter language="JavaCC" implementationClass="com.intellij.lang.java.JavaCommenter"/>

        <multiHostInjector implementation="com.github.oowekyala.ijcc.lang.injection.JavaccLanguageInjector"/>

        <lang.documentationProvider language="JavaCC"
                                    implementationClass="com.github.oowekyala.ijcc.insight.quickdoc.JccDocumentationProvider"/>
        <lang.ast.factory language="JavaCC"
                          implementationClass="com.github.oowekyala.ijcc.lang.psi.JavaccAstFactory"/>

        <lang.elementManipulator forClass="com.github.oowekyala.ijcc.lang.psi.JccLiteralRegexpUnit"
                                 implementationClass="com.github.oowekyala.ijcc.lang.psi.manipulators.JccLiteralRegexManipulator"/>
        <lang.elementManipulator forClass="com.github.oowekyala.ijcc.lang.psi.JccIdentifier"
                                 implementationClass="com.github.oowekyala.ijcc.lang.psi.manipulators.JccIdentifierManipulator"/>
        <lang.braceMatcher language="JavaCC" implementationClass="com.github.oowekyala.ijcc.JavaccPairedBraceMatcher"/>

        <defaultLiveTemplatesProvider implementation="com.github.oowekyala.ijcc.JavaccTemplatesProvider"/>
        <liveTemplateContext implementation="com.github.oowekyala.ijcc.JavaccTemplateContext"/>

        <lang.findUsagesProvider language="JavaCC"
                                 implementationClass="com.github.oowekyala.ijcc.lang.refs.JccFindUsagesProvider"/>
        <elementDescriptionProvider implementation="com.github.oowekyala.ijcc.lang.refs.JccDescriptionProvider"/>

        <lang.foldingBuilder language="JavaCC" implementationClass="com.github.oowekyala.ijcc.JavaccFoldingBuilder"/>

        <lang.psiStructureViewFactory language="JavaCC"
                                      implementationClass="com.github.oowekyala.ijcc.insight.structure.JavaccStructureViewBuilderFactory"/>

        <codeInsight.lineMarkerProvider language="JavaCC"
                                        implementationClass="com.github.oowekyala.ijcc.insight.jjtree.JjtreeNodeClassLineMarkerProvider"/>

        <codeInsight.lineMarkerProvider language="JavaCC"
                                        implementationClass="com.github.oowekyala.ijcc.insight.jjtree.JjtreePartialDeclarationLineMarkerProvider"/>

        <inspectionToolProvider
                implementation="com.github.oowekyala.ijcc.insight.inspections.JavaccInspectionsProvider"/>

        <highlightVisitor implementation="com.github.oowekyala.ijcc.insight.highlight.JccHighlightVisitor"/>
        <highlightVisitor implementation="com.github.oowekyala.ijcc.lang.injection.InjectedJavaHighlightVisitor"/>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.TokenInliningIntention</className>
        </intentionAction>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.ReplaceLiteralWithReferenceIntention</className>
        </intentionAction>
        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.GrammarToParserJumpIntention</className>
        </intentionAction>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.ReplaceParenthesizedOptionalWithBracedIntention</className>
        </intentionAction>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.ReplaceBracedExpansionUnitWithParenthesizedIntention</className>
        </intentionAction>
    </extensions>
</idea-plugin>
