<idea-plugin>
    <id>com.github.oowekyala.javacc</id>
    <name>JavaCC</name>
    <description><![CDATA[
        <p>Support for JavaCC and JJTree grammar files.</p>


        <h2>Features</h2>

        <h5>JavaCC code insight</h5>
        <ul>
            <li> Jump to declaration of productions and tokens</li>
            <li> Comprehensive structure view</li>
            <li> Quick documentation for productions and tokens</li>
            <li> Useful code folding to hide what gets in the way</li>
        </ul>

        <h5>JJTree code insight</h5>
        <ul>
            <li> Link productions and JJTree node descriptors to their corresponding node class</li>
            <li> Highlighting of the node scope of a node annotation</li>
        </ul>

        <h5>Java language injection</h5>
        <ul>
            <li> Java is injected in the embedded code fragments across the language, like parser actions</li>
            <li> Code completion, quick documentation, usage resolution, and many other Java code insight features are
                available on the most basic level of injection
            </li>
            <li> Compilation error checking (including type checking) and rich syntax highlighting can optionally be
                enabled in the plugin settings
            </li>
            <li> Control flow analysis of the embedded Java file respects the structure of the grammar, so that
                control-flow related inspections work properly
            </li>
        </ul>

        To change the injection level (or disable it), go to <strong>Settings</strong> | <strong>Languages &amp;
            Frameworks</strong> | <strong>JavaCC</strong>.

        <h5>Inspections</h5>

        Including unnecessary parentheses detection, ambiguous JJTree node descriptor, etc.
        ]]>
    </description>
    <vendor email="clement.fournier76@gmail.com" url="https://github.com/oowekyala">Cl√©ment Fournier</vendor>
    <idea-version since-build="182"/>

    <application-components>
        <!-- Add your application components here -->
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <actions>
        <!-- Add your actions here -->
    </actions>

    <extensions defaultExtensionNs="com.intellij">


        <projectConfigurable
                instance="com.github.oowekyala.ijcc.settings.JavaccProjectSettingsConfigurable"
                displayName="JavaCC"
                id="language.javacc"
                groupId="language"
        />

        <projectService serviceInterface="com.github.oowekyala.ijcc.settings.JavaccProjectSettingsService"
                        serviceImplementation="com.github.oowekyala.ijcc.settings.JavaccProjectSettingsServiceImpl"/>

        <additionalTextAttributes scheme="Darcula" file="com/github/oowekyala/ijcc/colorSchemes/Darcula_Javacc.xml"/>
        <additionalTextAttributes scheme="Default" file="com/github/oowekyala/ijcc/colorSchemes/Default_Javacc.xml"/>

        <fileTypeFactory implementation="com.github.oowekyala.ijcc.JavaccFileTypeFactory"/>
        <colorSettingsPage implementation="com.github.oowekyala.ijcc.insight.highlight.JavaccColorSettingsPage"/>

        <renamePsiElementProcessor implementation="com.github.oowekyala.ijcc.lang.refs.JccRenameProcessor"/>
        <lang.namesValidator language="JavaCC"
                             implementationClass="com.github.oowekyala.ijcc.lang.refs.JccNamesValidator"/>
        <lang.parserDefinition
                language="JavaCC" implementationClass="com.github.oowekyala.ijcc.JavaccParserDefinition"/>
        <lang.syntaxHighlighterFactory
                language="JavaCC"
                implementationClass="com.github.oowekyala.ijcc.insight.highlight.JavaccSyntaxHighlighterFactory"/>
        <lang.commenter language="JavaCC" implementationClass="com.intellij.lang.java.JavaCommenter"/>

        <multiHostInjector implementation="com.github.oowekyala.ijcc.lang.injection.JavaccLanguageInjector"/>

        <lang.documentationProvider language="JavaCC"
                                    implementationClass="com.github.oowekyala.ijcc.insight.quickdoc.JccDocumentationProvider"/>
        <lang.ast.factory language="JavaCC"
                          implementationClass="com.github.oowekyala.ijcc.lang.psi.JavaccAstFactory"/>

        <lang.elementManipulator forClass="com.github.oowekyala.ijcc.lang.psi.JccLiteralRegexpUnit"
                                 implementationClass="com.github.oowekyala.ijcc.lang.psi.manipulators.JccLiteralRegexManipulator"/>
        <lang.elementManipulator forClass="com.github.oowekyala.ijcc.lang.psi.JccIdentifier"
                                 implementationClass="com.github.oowekyala.ijcc.lang.psi.manipulators.JccIdentifierManipulator"/>
        <lang.braceMatcher language="JavaCC" implementationClass="com.github.oowekyala.ijcc.JavaccPairedBraceMatcher"/>

        <defaultLiveTemplatesProvider implementation="com.github.oowekyala.ijcc.JavaccTemplatesProvider"/>
        <liveTemplateContext implementation="com.github.oowekyala.ijcc.JavaccTemplateContext"/>

        <lang.findUsagesProvider language="JavaCC"
                                 implementationClass="com.github.oowekyala.ijcc.lang.refs.JccFindUsagesProvider"/>
        <elementDescriptionProvider implementation="com.github.oowekyala.ijcc.lang.refs.JccDescriptionProvider"/>

        <lang.foldingBuilder language="JavaCC" implementationClass="com.github.oowekyala.ijcc.JavaccFoldingBuilder"/>

        <lang.psiStructureViewFactory language="JavaCC"
                                      implementationClass="com.github.oowekyala.ijcc.insight.structure.JavaccStructureViewBuilderFactory"/>

        <codeInsight.lineMarkerProvider language="JavaCC"
                                        implementationClass="com.github.oowekyala.ijcc.insight.jjtree.JjtreeLineMarkerProvider"/>

        <inspectionToolProvider
                implementation="com.github.oowekyala.ijcc.insight.inspections.JavaccInspectionsProvider"/>

        <highlightVisitor implementation="com.github.oowekyala.ijcc.insight.highlight.JccHighlightVisitor"/>
        <highlightVisitor implementation="com.github.oowekyala.ijcc.lang.injection.InjectedJavaHighlightVisitor"/>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.TokenInliningIntention</className>
        </intentionAction>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.ReplaceLiteralWithReferenceIntention</className>
        </intentionAction>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.ReplaceParenthesizedOptionalWithBracedIntention</className>
        </intentionAction>

        <intentionAction>
            <className>com.github.oowekyala.ijcc.insight.inspections.ReplaceBracedExpansionUnitWithParenthesizedIntention</className>
        </intentionAction>
    </extensions>
</idea-plugin>
