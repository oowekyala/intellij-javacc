/* Generated By:JavaCC(jj2IntelliJ output version): Do not edit this line. JavaCCTreeConstants.java Version 5.0 */

package com.github.oowekyala.gark87.idea.javacc.generated;

import com.intellij.psi.tree.IElementType;


public interface JavaCCTreeConstants {
    public IElementType JJTJAVACC_INPUT = new JavaCCElementType("javacc_input");
    public IElementType JJTJAVACC_OPTIONS = new JavaCCElementType("javacc_options");
    public IElementType JJTOPTION_BINDING = new JavaCCElementType("option_binding");
    public IElementType JJTPRODUCTION = new JavaCCElementType("production");
    public IElementType JJTJAVACODE_PRODUCTION = new JavaCCElementType("javacode_production");
    public IElementType JJTBNF_PRODUCTION = new JavaCCElementType("bnf_production");
    public IElementType JJTACCESSMODIFIER = new JavaCCElementType("AccessModifier");
    public IElementType JJTREGULAR_EXPR_PRODUCTION = new JavaCCElementType("regular_expr_production");
    public IElementType JJTTOKEN_MANAGER_DECLS = new JavaCCElementType("token_manager_decls");
    public IElementType JJTREGEXPR_KIND = new JavaCCElementType("regexpr_kind");
    public IElementType JJTREGEXPR_SPEC = new JavaCCElementType("regexpr_spec");
    public IElementType JJTEXPANSION_CHOICES = new JavaCCElementType("expansion_choices");
    public IElementType JJTEXPANSION = new JavaCCElementType("expansion");
    public IElementType JJTLOCAL_LOOKAHEAD = new JavaCCElementType("local_lookahead");
    public IElementType JJTEXPANSION_UNIT = new JavaCCElementType("expansion_unit");
    public IElementType JJTREGULAR_EXPRESSION = new JavaCCElementType("regular_expression");
    public IElementType JJTCOMPLEX_REGULAR_EXPRESSION_CHOICES = new JavaCCElementType("complex_regular_expression_choices");
    public IElementType JJTCOMPLEX_REGULAR_EXPRESSION = new JavaCCElementType("complex_regular_expression");
    public IElementType JJTCOMPLEX_REGULAR_EXPRESSION_UNIT = new JavaCCElementType("complex_regular_expression_unit");
    public IElementType JJTCHARACTER_LIST = new JavaCCElementType("character_list");
    public IElementType JJTCHARACTER_DESCRIPTOR = new JavaCCElementType("character_descriptor");
    public IElementType JJTIDENTIFIER = new JavaCCElementType("identifier");
    public IElementType JJTNODE_DESCRIPTOR = new JavaCCElementType("node_descriptor");
    public IElementType JJTNODE_DESCRIPTOR_EXPRESSION = new JavaCCElementType("node_descriptor_expression");
    public IElementType JJTJAVAIDENTIFIER = new JavaCCElementType("JavaIdentifier");
    public IElementType JJTCOMPILATIONUNIT = new JavaCCElementType("CompilationUnit");
    public IElementType JJTPACKAGEDECLARATION = new JavaCCElementType("PackageDeclaration");
    public IElementType JJTIMPORTDECLARATION = new JavaCCElementType("ImportDeclaration");
    public IElementType JJTMODIFIERS = new JavaCCElementType("Modifiers");
    public IElementType JJTTYPEDECLARATION = new JavaCCElementType("TypeDeclaration");
    public IElementType JJTCLASSORINTERFACEDECLARATION = new JavaCCElementType("ClassOrInterfaceDeclaration");
    public IElementType JJTEXTENDSLIST = new JavaCCElementType("ExtendsList");
    public IElementType JJTIMPLEMENTSLIST = new JavaCCElementType("ImplementsList");
    public IElementType JJTENUMDECLARATION = new JavaCCElementType("EnumDeclaration");
    public IElementType JJTENUMBODY = new JavaCCElementType("EnumBody");
    public IElementType JJTENUMCONSTANT = new JavaCCElementType("EnumConstant");
    public IElementType JJTTYPEPARAMETERS = new JavaCCElementType("TypeParameters");
    public IElementType JJTTYPEPARAMETER = new JavaCCElementType("TypeParameter");
    public IElementType JJTTYPEBOUND = new JavaCCElementType("TypeBound");
    public IElementType JJTCLASSORINTERFACEBODY = new JavaCCElementType("ClassOrInterfaceBody");
    public IElementType JJTCLASSORINTERFACEBODYDECLARATION = new JavaCCElementType("ClassOrInterfaceBodyDeclaration");
    public IElementType JJTFIELDDECLARATION = new JavaCCElementType("FieldDeclaration");
    public IElementType JJTVARIABLEDECLARATOR = new JavaCCElementType("VariableDeclarator");
    public IElementType JJTVARIABLEDECLARATORID = new JavaCCElementType("VariableDeclaratorId");
    public IElementType JJTVARIABLEINITIALIZER = new JavaCCElementType("VariableInitializer");
    public IElementType JJTARRAYINITIALIZER = new JavaCCElementType("ArrayInitializer");
    public IElementType JJTMETHODDECLARATION = new JavaCCElementType("MethodDeclaration");
    public IElementType JJTMETHODDECLARATOR = new JavaCCElementType("MethodDeclarator");
    public IElementType JJTFORMALPARAMETERS = new JavaCCElementType("FormalParameters");
    public IElementType JJTFORMALPARAMETER = new JavaCCElementType("FormalParameter");
    public IElementType JJTCONSTRUCTORDECLARATION = new JavaCCElementType("ConstructorDeclaration");
    public IElementType JJTEXPLICITCONSTRUCTORINVOCATION = new JavaCCElementType("ExplicitConstructorInvocation");
    public IElementType JJTINITIALIZER = new JavaCCElementType("Initializer");
    public IElementType JJTTYPE = new JavaCCElementType("Type");
    public IElementType JJTREFERENCETYPE = new JavaCCElementType("ReferenceType");
    public IElementType JJTCLASSORINTERFACETYPE = new JavaCCElementType("ClassOrInterfaceType");
    public IElementType JJTTYPEARGUMENTS = new JavaCCElementType("TypeArguments");
    public IElementType JJTTYPEARGUMENT = new JavaCCElementType("TypeArgument");
    public IElementType JJTWILDCARDBOUNDS = new JavaCCElementType("WildcardBounds");
    public IElementType JJTPRIMITIVETYPE = new JavaCCElementType("PrimitiveType");
    public IElementType JJTRESULTTYPE = new JavaCCElementType("ResultType");
    public IElementType JJTNAME = new JavaCCElementType("Name");
    public IElementType JJTNAMELIST = new JavaCCElementType("NameList");
    public IElementType JJTEXPRESSION = new JavaCCElementType("Expression");
    public IElementType JJTASSIGNMENTOPERATOR = new JavaCCElementType("AssignmentOperator");
    public IElementType JJTCONDITIONALEXPRESSION = new JavaCCElementType("ConditionalExpression");
    public IElementType JJTCONDITIONALOREXPRESSION = new JavaCCElementType("ConditionalOrExpression");
    public IElementType JJTCONDITIONALANDEXPRESSION = new JavaCCElementType("ConditionalAndExpression");
    public IElementType JJTINCLUSIVEOREXPRESSION = new JavaCCElementType("InclusiveOrExpression");
    public IElementType JJTEXCLUSIVEOREXPRESSION = new JavaCCElementType("ExclusiveOrExpression");
    public IElementType JJTANDEXPRESSION = new JavaCCElementType("AndExpression");
    public IElementType JJTEQUALITYEXPRESSION = new JavaCCElementType("EqualityExpression");
    public IElementType JJTINSTANCEOFEXPRESSION = new JavaCCElementType("InstanceOfExpression");
    public IElementType JJTRELATIONALEXPRESSION = new JavaCCElementType("RelationalExpression");
    public IElementType JJTSHIFTEXPRESSION = new JavaCCElementType("ShiftExpression");
    public IElementType JJTADDITIVEEXPRESSION = new JavaCCElementType("AdditiveExpression");
    public IElementType JJTMULTIPLICATIVEEXPRESSION = new JavaCCElementType("MultiplicativeExpression");
    public IElementType JJTUNARYEXPRESSION = new JavaCCElementType("UnaryExpression");
    public IElementType JJTPREINCREMENTEXPRESSION = new JavaCCElementType("PreIncrementExpression");
    public IElementType JJTPREDECREMENTEXPRESSION = new JavaCCElementType("PreDecrementExpression");
    public IElementType JJTUNARYEXPRESSIONNOTPLUSMINUS = new JavaCCElementType("UnaryExpressionNotPlusMinus");
    public IElementType JJTCASTLOOKAHEAD = new JavaCCElementType("CastLookahead");
    public IElementType JJTPOSTFIXEXPRESSION = new JavaCCElementType("PostfixExpression");
    public IElementType JJTCASTEXPRESSION = new JavaCCElementType("CastExpression");
    public IElementType JJTPRIMARYEXPRESSION = new JavaCCElementType("PrimaryExpression");
    public IElementType JJTMEMBERSELECTOR = new JavaCCElementType("MemberSelector");
    public IElementType JJTPRIMARYPREFIX = new JavaCCElementType("PrimaryPrefix");
    public IElementType JJTPRIMARYSUFFIX = new JavaCCElementType("PrimarySuffix");
    public IElementType JJTLITERAL = new JavaCCElementType("Literal");
    public IElementType JJTVOID = new JavaCCElementType("void");
    public IElementType JJTBOOLEANLITERAL = new JavaCCElementType("BooleanLiteral");
    public IElementType JJTARGUMENTS = new JavaCCElementType("Arguments");
    public IElementType JJTARGUMENTLIST = new JavaCCElementType("ArgumentList");
    public IElementType JJTALLOCATIONEXPRESSION = new JavaCCElementType("AllocationExpression");
    public IElementType JJTARRAYDIMSANDINITS = new JavaCCElementType("ArrayDimsAndInits");
    public IElementType JJTASSERTSTATEMENT = new JavaCCElementType("AssertStatement");
    public IElementType JJTLABELEDSTATEMENT = new JavaCCElementType("LabeledStatement");
    public IElementType JJTBLOCK = new JavaCCElementType("Block");
    public IElementType JJTLOCALVARIABLEDECLARATION = new JavaCCElementType("LocalVariableDeclaration");
    public IElementType JJTEMPTYSTATEMENT = new JavaCCElementType("EmptyStatement");
    public IElementType JJTSTATEMENTEXPRESSION = new JavaCCElementType("StatementExpression");
    public IElementType JJTSWITCHSTATEMENT = new JavaCCElementType("SwitchStatement");
    public IElementType JJTSWITCHLABEL = new JavaCCElementType("SwitchLabel");
    public IElementType JJTIFSTATEMENT = new JavaCCElementType("IfStatement");
    public IElementType JJTWHILESTATEMENT = new JavaCCElementType("WhileStatement");
    public IElementType JJTDOSTATEMENT = new JavaCCElementType("DoStatement");
    public IElementType JJTFORSTATEMENT = new JavaCCElementType("ForStatement");
    public IElementType JJTFORINIT = new JavaCCElementType("ForInit");
    public IElementType JJTSTATEMENTEXPRESSIONLIST = new JavaCCElementType("StatementExpressionList");
    public IElementType JJTFORUPDATE = new JavaCCElementType("ForUpdate");
    public IElementType JJTBREAKSTATEMENT = new JavaCCElementType("BreakStatement");
    public IElementType JJTCONTINUESTATEMENT = new JavaCCElementType("ContinueStatement");
    public IElementType JJTRETURNSTATEMENT = new JavaCCElementType("ReturnStatement");
    public IElementType JJTTHROWSTATEMENT = new JavaCCElementType("ThrowStatement");
    public IElementType JJTSYNCHRONIZEDSTATEMENT = new JavaCCElementType("SynchronizedStatement");
    public IElementType JJTTRYSTATEMENT = new JavaCCElementType("TryStatement");
    public IElementType JJTRUNSIGNEDSHIFT = new JavaCCElementType("RUNSIGNEDSHIFT");
    public IElementType JJTRSIGNEDSHIFT = new JavaCCElementType("RSIGNEDSHIFT");
    public IElementType JJTANNOTATION = new JavaCCElementType("Annotation");
    public IElementType JJTNORMALANNOTATION = new JavaCCElementType("NormalAnnotation");
    public IElementType JJTMARKERANNOTATION = new JavaCCElementType("MarkerAnnotation");
    public IElementType JJTSINGLEMEMBERANNOTATION = new JavaCCElementType("SingleMemberAnnotation");
    public IElementType JJTMEMBERVALUEPAIRS = new JavaCCElementType("MemberValuePairs");
    public IElementType JJTMEMBERVALUEPAIR = new JavaCCElementType("MemberValuePair");
    public IElementType JJTMEMBERVALUE = new JavaCCElementType("MemberValue");
    public IElementType JJTMEMBERVALUEARRAYINITIALIZER = new JavaCCElementType("MemberValueArrayInitializer");
    public IElementType JJTANNOTATIONTYPEDECLARATION = new JavaCCElementType("AnnotationTypeDeclaration");
    public IElementType JJTANNOTATIONTYPEBODY = new JavaCCElementType("AnnotationTypeBody");
    public IElementType JJTANNOTATIONTYPEMEMBERDECLARATION = new JavaCCElementType("AnnotationTypeMemberDeclaration");
    public IElementType JJTDEFAULTVALUE = new JavaCCElementType("DefaultValue");


}
/* JavaCC - OriginalChecksum=ab25c35d02cce0a1ad2545ef1872298c (do not edit this line) */
